<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A.Dun</title>
  
  <subtitle>java日记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhudunfeng.github.io/"/>
  <updated>2020-08-20T11:45:26.869Z</updated>
  <id>http://zhudunfeng.github.io/</id>
  
  <author>
    <name>A.Dun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Acticiti流程引擎在已知当前流程定义id的情况下获取当前流程的所有信息（包括：节点和连线）</title>
    <link href="http://zhudunfeng.github.io/2020/08/20/Acticiti%E6%B5%81%E7%A8%8B%E5%BC%95%E6%93%8E%E5%9C%A8%E5%B7%B2%E7%9F%A5%E5%BD%93%E5%89%8D%E6%B5%81%E7%A8%8B%E5%AE%9A%E4%B9%89id%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%B5%81%E7%A8%8B%E7%9A%84%E6%89%80%E6%9C%89%E4%BF%A1%E6%81%AF%EF%BC%88%E5%8C%85%E6%8B%AC%EF%BC%9A%E8%8A%82%E7%82%B9%E5%92%8C%E8%BF%9E%E7%BA%BF%EF%BC%89/"/>
    <id>http://zhudunfeng.github.io/2020/08/20/Acticiti%E6%B5%81%E7%A8%8B%E5%BC%95%E6%93%8E%E5%9C%A8%E5%B7%B2%E7%9F%A5%E5%BD%93%E5%89%8D%E6%B5%81%E7%A8%8B%E5%AE%9A%E4%B9%89id%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%B5%81%E7%A8%8B%E7%9A%84%E6%89%80%E6%9C%89%E4%BF%A1%E6%81%AF%EF%BC%88%E5%8C%85%E6%8B%AC%EF%BC%9A%E8%8A%82%E7%82%B9%E5%92%8C%E8%BF%9E%E7%BA%BF%EF%BC%89/</id>
    <published>2020-08-20T11:42:16.111Z</published>
    <updated>2020-08-20T11:45:26.869Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Acticiti流程引擎在已知当前流程定义id的情况下获取当前流程的所有信息（包括：节点和连线）"><a href="#Acticiti流程引擎在已知当前流程定义id的情况下获取当前流程的所有信息（包括：节点和连线）" class="headerlink" title="Acticiti流程引擎在已知当前流程定义id的情况下获取当前流程的所有信息（包括：节点和连线）"></a>Acticiti流程引擎在已知当前流程定义id的情况下获取当前流程的所有信息（包括：节点和连线）</h1><p>这里我们已知流程已经部署，我的需求是获取当前流程的所有任务节点，我使用instanceof关键字来进行匹配</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> List&lt;UserTask&gt; <span class="title">getProcessUserTasks</span><span class="params">(String processInstanceId)</span> </span>&#123;</span><br><span class="line">        ProcessInstance processInstance = runtimeService.createProcessInstanceQuery().processInstanceId(processInstanceId).singleResult();</span><br><span class="line">        BpmnModel bpmnModel = repositoryService.getBpmnModel( processInstance.getProcessDefinitionId());</span><br><span class="line">        ProcessDefinition processDefinition = repositoryService.createProcessDefinitionQuery().processDefinitionId(processInstance.getProcessDefinitionId()).singleResult();</span><br><span class="line">        <span class="comment">//process中包含所有的节点信息,包括流程线</span></span><br><span class="line">        Process process = bpmnModel.getProcessById(processDefinition.getKey());</span><br><span class="line">        <span class="comment">//获取流程所有节点信息</span></span><br><span class="line">        Collection&lt;FlowElement&gt; flowElements = process.getFlowElements();</span><br><span class="line">        List&lt;UserTask&gt; userTaskList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//筛选流程中所有的UserTask任务节点</span></span><br><span class="line">        <span class="keyword">for</span> (FlowElement flowElement : flowElements) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flowElement <span class="keyword">instanceof</span> UserTask) &#123;</span><br><span class="line">                UserTask userTask = ((UserTask) flowElement);</span><br><span class="line">                userTaskList.add(userTask);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userTaskList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Acticiti流程引擎在已知当前流程定义id的情况下获取当前流程的所有信息（包括：节点和连线）&quot;&gt;&lt;a href=&quot;#Acticiti流程引擎在已知当前流程定义id的情况下获取当前流程的所有信息（包括：节点和连线）&quot; class=&quot;headerlink&quot; title=&quot;Acticiti流程引擎在已知当前流程定义id的情况下获取当前流程的所有信息（包括：节点和连线）&quot;&gt;&lt;/a&gt;Acticiti流程引擎在已知当前流程定义id的情况下获取当前流程的所有信息（包括：节点和连线）&lt;/h1&gt;&lt;p&gt;这里我们已知流程已经部署，我的需求是获取当前流程的所有任务节点，我使用instanceof关键字来进行匹配&lt;/p&gt;
    
    </summary>
    
    
      <category term="流程引擎框架" scheme="http://zhudunfeng.github.io/categories/%E6%B5%81%E7%A8%8B%E5%BC%95%E6%93%8E%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Java" scheme="http://zhudunfeng.github.io/tags/Java/"/>
    
      <category term="Activiti" scheme="http://zhudunfeng.github.io/tags/Activiti/"/>
    
      <category term="流程节点" scheme="http://zhudunfeng.github.io/tags/%E6%B5%81%E7%A8%8B%E8%8A%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot使用activiti自定义流程demo解析</title>
    <link href="http://zhudunfeng.github.io/2020/07/24/SpringBoot%E4%BD%BF%E7%94%A8activiti%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B5%81%E7%A8%8Bdemo%E8%A7%A3%E6%9E%90/"/>
    <id>http://zhudunfeng.github.io/2020/07/24/SpringBoot%E4%BD%BF%E7%94%A8activiti%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B5%81%E7%A8%8Bdemo%E8%A7%A3%E6%9E%90/</id>
    <published>2020-07-24T13:02:41.758Z</published>
    <updated>2020-07-24T13:56:06.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境搭建【这里直接讲解自定义流程】"><a href="#环境搭建【这里直接讲解自定义流程】" class="headerlink" title="环境搭建【这里直接讲解自定义流程】"></a>环境搭建【这里直接讲解自定义流程】</h1><h2 id="集成-Activiti-Modeler"><a href="#集成-Activiti-Modeler" class="headerlink" title="集成 Activiti Modeler"></a>集成 Activiti Modeler</h2><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>我这里选用的是 Activiti 5.23.0 版本的页面，下载 zip，解压<br><a href="https://github.com/Activiti/Activiti/releases/tag/5.23.0/" target="_blank" rel="noopener">Activiti 5.23.0 源码</a></p><a id="more"></a><h3 id="pom依赖"><a href="#pom依赖" class="headerlink" title="pom依赖"></a>pom依赖</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br><span class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">&lt;groupId&gt;com.activiti6&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;activiti6-demo&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.0.0&lt;/version&gt;</span><br><span class="line">&lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">&lt;parent&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.5.8.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;relativePath/&gt;</span><br><span class="line">&lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">&lt;properties&gt;</span><br><span class="line">&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">&lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</span><br><span class="line">&lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">&lt;druid.version&gt;1.1.6&lt;/druid.version&gt;</span><br><span class="line">        &lt;activiti.version&gt;6.0.0&lt;/activiti.version&gt;</span><br><span class="line">        &lt;apache.xmlgraphics.version&gt;1.7&lt;/apache.xmlgraphics.version&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-freemarker&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- mysql 驱动依赖--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Druid DataSource --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;$&#123;druid.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- activiti --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.activiti&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;activiti-spring-boot-starter-basic&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;activiti.version&#125;&lt;/version&gt; </span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        </span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.activiti&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;activiti-json-converter&lt;/artifactId&gt;</span><br><span class="line">     &lt;version&gt;$&#123;activiti.version&#125;&lt;/version&gt;</span><br><span class="line">     &lt;exclusions&gt;</span><br><span class="line">&lt;exclusion&gt;</span><br><span class="line">&lt;groupId&gt;org.activiti&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;</span><br><span class="line">&lt;/exclusion&gt;</span><br><span class="line">     &lt;/exclusions&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;dependency&gt; </span><br><span class="line">    &lt;groupId&gt;org.apache.xmlgraphics&lt;/groupId&gt; </span><br><span class="line">    &lt;artifactId&gt;batik-codec&lt;/artifactId&gt; </span><br><span class="line">    &lt;version&gt;$&#123;apache.xmlgraphics.version&#125;&lt;/version&gt; </span><br><span class="line">    &lt;/dependency&gt; </span><br><span class="line">    &lt;dependency&gt; </span><br><span class="line">    &lt;groupId&gt;org.apache.xmlgraphics&lt;/groupId&gt; </span><br><span class="line">    &lt;artifactId&gt;batik-css&lt;/artifactId&gt; </span><br><span class="line">    &lt;version&gt;$&#123;apache.xmlgraphics.version&#125;&lt;/version&gt; </span><br><span class="line">    &lt;/dependency&gt; </span><br><span class="line">    &lt;dependency&gt; </span><br><span class="line">    &lt;groupId&gt;org.apache.xmlgraphics&lt;/groupId&gt; </span><br><span class="line">    &lt;artifactId&gt;batik-svg-dom&lt;/artifactId&gt; </span><br><span class="line">    &lt;version&gt;$&#123;apache.xmlgraphics.version&#125;&lt;/version&gt; </span><br><span class="line">    &lt;/dependency&gt; </span><br><span class="line">    &lt;dependency&gt; </span><br><span class="line">    &lt;groupId&gt;org.apache.xmlgraphics&lt;/groupId&gt; </span><br><span class="line">    &lt;artifactId&gt;batik-svggen&lt;/artifactId&gt; </span><br><span class="line">    &lt;version&gt;$&#123;apache.xmlgraphics.version&#125;&lt;/version&gt; </span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;junit-jupiter-api&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;RELEASE&lt;/version&gt;</span><br><span class="line">&lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.2.70&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">&lt;build&gt;</span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h3 id="代码集成"><a href="#代码集成" class="headerlink" title="代码集成"></a>代码集成</h3><h5 id="前端代码集成"><a href="#前端代码集成" class="headerlink" title="前端代码集成"></a>前端代码集成</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">在项目中的<span class="built_in"> resource </span>文件夹下新建一个 static 文件夹</span><br><span class="line"></span><br><span class="line">SpringBoot 能自动读取 static 目录下的静态文件，因此文件夹名称不可随意更改</span><br><span class="line"></span><br><span class="line">找到 activiti-webapp-explorer2 包</span><br><span class="line"></span><br><span class="line">将 webapp 下的 diagram-viewer 文件夹，editor-app 文件夹，modeler.html 文件复制到 static 下</span><br><span class="line"></span><br><span class="line">diagram-viewer：流程图跟踪组件</span><br><span class="line">editor-app：目录中包含设计器里面所有的资源：angular.js、oryx.js以及配套的插件及css</span><br><span class="line">modeler.html：流程设计器的主页面，用来引入各种web资源</span><br><span class="line">路径：Activiti-5.23.0\modules\activiti-webapp-explorer2\src\main\webapp</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200724203813752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODE2NzAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h5 id="后端代码集成"><a href="#后端代码集成" class="headerlink" title="后端代码集成"></a>后端代码集成</h5><p>将 Activit 5.23.0 项目中 resource 文件夹下的 stencilset.json 放到自己项目的 resource 目录下<br>路径：Activiti-5.23.0\modules\activiti-webapp-explorer2\src\main\resources<br>在我提供的demo中有汉化版本，这里只有国际版本<br><img src="https://img-blog.csdnimg.cn/2020072420414395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODE2NzAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>找到 activiti-modeler 包</p><p>将里面的 StencilsetRestResource.java，ModelEditorJsonRestResource.java，ModelSaveRestResource.java 文件放到自己的项目里</p><ul><li>StencilsetRestResource.java：用于读取 stencilset.json 文件 </li><li>ModelEditorJsonRestResource.java：用户获取流程数据</li><li>ModelSaveRestResource.java：用于保存流程数据<br>路径：Activiti-5.23.0\modules\activiti-modeler\src\main\java\org\activiti\rest\editor<br><img src="https://img-blog.csdnimg.cn/20200724204841439.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020072420485470.png" alt="在这里插入图片描述"><h4 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h4><img src="https://img-blog.csdnimg.cn/2020072420510679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODE2NzAy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>创建流程与部署流程<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.activiti6.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.activiti.bpmn.model.BpmnModel;</span><br><span class="line"><span class="keyword">import</span> org.activiti.editor.constants.ModelDataJsonConstants;</span><br><span class="line"><span class="keyword">import</span> org.activiti.editor.language.json.converter.BpmnJsonConverter;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.HistoryService;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.RepositoryService;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.RuntimeService;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.repository.Deployment;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.repository.Model;</span><br><span class="line"><span class="keyword">import</span> org.activiti.engine.runtime.ProcessInstance;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonNode;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.ObjectNode;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 流程控制器</span></span><br><span class="line"><span class="comment"> * zhudunfrng</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ModelerController</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(ModelerController<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RepositoryService repositoryService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HistoryService historyService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RuntimeService runtimeService;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"index"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">index</span><span class="params">(ModelAndView modelAndView)</span> </span>&#123;</span><br><span class="line">        modelAndView.setViewName(<span class="string">"index"</span>);</span><br><span class="line">        modelAndView.addObject(<span class="string">"modelList"</span>, repositoryService.createModelQuery().list());</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转编辑器页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"editor"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">editor</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"modeler"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建模型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name 模型名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 模型key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/create"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">create</span><span class="params">(HttpServletResponse response,String name,String key)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    logger.info(<span class="string">"创建模型入参name：&#123;&#125;,key:&#123;&#125;"</span>,name,key);</span><br><span class="line">        Model model = repositoryService.newModel();</span><br><span class="line">        ObjectNode modelNode = objectMapper.createObjectNode();</span><br><span class="line">        modelNode.put(ModelDataJsonConstants.MODEL_NAME, name);</span><br><span class="line">        modelNode.put(ModelDataJsonConstants.MODEL_DESCRIPTION, <span class="string">""</span>);</span><br><span class="line">        modelNode.put(ModelDataJsonConstants.MODEL_REVISION, <span class="number">1</span>);</span><br><span class="line">        model.setName(name);</span><br><span class="line">        model.setKey(key);</span><br><span class="line">        model.setMetaInfo(modelNode.toString());</span><br><span class="line">        <span class="comment">//存入表act_re_model</span></span><br><span class="line">        repositoryService.saveModel(model);</span><br><span class="line">        createObjectNode(model.getId());</span><br><span class="line">        response.sendRedirect(<span class="string">"/editor?modelId="</span>+ model.getId());</span><br><span class="line">        logger.info(<span class="string">"创建模型结束，返回模型ID：&#123;&#125;"</span>,model.getId());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建模型时完善ModelEditorSource，这里是对画布的相关设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modelId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createObjectNode</span><span class="params">(String modelId)</span></span>&#123;</span><br><span class="line">     logger.info(<span class="string">"创建模型完善ModelEditorSource入参模型ID：&#123;&#125;"</span>,modelId);</span><br><span class="line">     ObjectNode editorNode = objectMapper.createObjectNode();</span><br><span class="line">         editorNode.put(<span class="string">"id"</span>, <span class="string">"canvas"</span>);</span><br><span class="line">         editorNode.put(<span class="string">"resourceId"</span>, <span class="string">"canvas"</span>);</span><br><span class="line">         ObjectNode stencilSetNode = objectMapper.createObjectNode();</span><br><span class="line">         stencilSetNode.put(<span class="string">"namespace"</span>,<span class="string">"http://b3mn.org/stencilset/bpmn2.0#"</span>);</span><br><span class="line">         editorNode.put(<span class="string">"stencilset"</span>, stencilSetNode);</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">repositoryService.addModelEditorSource(modelId,editorNode.toString().getBytes(<span class="string">"utf-8"</span>));</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"> logger.info(<span class="string">"创建模型时完善ModelEditorSource服务异常：&#123;&#125;"</span>,e);</span><br><span class="line">&#125;</span><br><span class="line">        logger.info(<span class="string">"创建模型完善ModelEditorSource结束"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发布流程///流程部署</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modelId 模型ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/publish"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">publish</span><span class="params">(String modelId)</span></span>&#123;</span><br><span class="line">    logger.info(<span class="string">"流程部署入参modelId：&#123;&#125;"</span>,modelId);</span><br><span class="line">    Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Model modelData = repositoryService.getModel(modelId);<span class="comment">//获取相应的模型信息，act_re_model</span></span><br><span class="line">        <span class="keyword">byte</span>[] bytes = repositoryService.getModelEditorSource(modelData.getId());<span class="comment">//获取相应的流程文件信息，act_ge_bytearray</span></span><br><span class="line">        <span class="keyword">if</span> (bytes == <span class="keyword">null</span>) &#123;<span class="comment">//没有相应的流程文件</span></span><br><span class="line">        logger.info(<span class="string">"部署ID:&#123;&#125;的模型数据为空，请先设计流程并成功保存，再进行发布"</span>,modelId);</span><br><span class="line">        map.put(<span class="string">"code"</span>, <span class="string">"FAILURE"</span>);</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125;</span><br><span class="line">JsonNode modelNode = <span class="keyword">new</span> ObjectMapper().readTree(bytes);<span class="comment">//解析相应的流程文件</span></span><br><span class="line">BpmnModel model = <span class="keyword">new</span> BpmnJsonConverter().convertToBpmnModel(modelNode);</span><br><span class="line"><span class="comment">//部署</span></span><br><span class="line">        Deployment deployment = repositoryService.createDeployment()</span><br><span class="line">        .name(modelData.getName())<span class="comment">//模型名称</span></span><br><span class="line">        .addBpmnModel(modelData.getKey()+<span class="string">".bpmn20.xml"</span>, model)</span><br><span class="line">        .deploy();<span class="comment">//部署相应的流程</span></span><br><span class="line">        modelData.setDeploymentId(deployment.getId());<span class="comment">//获取流程部署后的流程id</span></span><br><span class="line">        repositoryService.saveModel(modelData);<span class="comment">//保存到act_re_model表中</span></span><br><span class="line">        map.put(<span class="string">"code"</span>, <span class="string">"SUCCESS"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">logger.info(<span class="string">"部署modelId:&#123;&#125;模型服务异常：&#123;&#125;"</span>,modelId,e);</span><br><span class="line">map.put(<span class="string">"code"</span>, <span class="string">"FAILURE"</span>);</span><br><span class="line">&#125;</span><br><span class="line">logger.info(<span class="string">"流程部署出参map：&#123;&#125;"</span>,map);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 撤销流程定义</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modelId 模型ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/revokePublish"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">revokePublish</span><span class="params">(String modelId)</span></span>&#123;</span><br><span class="line">    logger.info(<span class="string">"撤销发布流程入参modelId：&#123;&#125;"</span>,modelId);</span><br><span class="line">    Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">Model modelData = repositoryService.getModel(modelId);<span class="comment">//获取相应的模型信息，act_re_model</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">null</span> != modelData)&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参数不加true:为普通删除，如果当前规则下有正在执行的流程，则抛异常 </span></span><br><span class="line"><span class="comment"> * 参数加true:为级联删除,会删除和当前规则相关的所有信息，包括历史 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//根据流程的部署ID删除act_re_procdef、act_re_deployment表中的数据，后面的true是将还有未完成任务的流程强制删除</span></span><br><span class="line">repositoryService.deleteDeployment(modelData.getDeploymentId(),<span class="keyword">true</span>);</span><br><span class="line">map.put(<span class="string">"code"</span>, <span class="string">"SUCCESS"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">logger.error(<span class="string">"撤销已部署流程服务异常：&#123;&#125;"</span>,e);</span><br><span class="line">map.put(<span class="string">"code"</span>, <span class="string">"FAILURE"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">logger.info(<span class="string">"撤销发布流程出参map：&#123;&#125;"</span>,map);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除流程实例  流程正在运行中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> modelId 模型ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/delete"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">deleteProcessInstance</span><span class="params">(String modelId)</span></span>&#123;</span><br><span class="line">    logger.info(<span class="string">"删除流程实例入参modelId：&#123;&#125;"</span>,modelId);</span><br><span class="line">    Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">Model modelData = repositoryService.getModel(modelId);<span class="comment">//获取相应的模型信息，act_re_model</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">null</span> != modelData)&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//流程启动后会在act_ru_execution表中查到，根据流程定义的key进行查询</span></span><br><span class="line">   ProcessInstance pi = runtimeService.createProcessInstanceQuery().processDefinitionKey(modelData.getKey()).singleResult();</span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">null</span> != pi) &#123;</span><br><span class="line">                    <span class="comment">//根据流程实例ID进行删除，act_ru_execution</span></span><br><span class="line">   runtimeService.deleteProcessInstance(pi.getId(), <span class="string">""</span>);</span><br><span class="line">   <span class="comment">//删除历史流程实例act_hi_procinst</span></span><br><span class="line">   historyService.deleteHistoricProcessInstance(pi.getId());</span><br><span class="line">   &#125;</span><br><span class="line">map.put(<span class="string">"code"</span>, <span class="string">"SUCCESS"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">logger.error(<span class="string">"删除流程实例服务异常：&#123;&#125;"</span>,e);</span><br><span class="line">map.put(<span class="string">"code"</span>, <span class="string">"FAILURE"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">logger.info(<span class="string">"删除流程实例出参map：&#123;&#125;"</span>,map);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 启动流程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/start/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startProcess</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span>String processDefinitionId)</span>&#123;</span><br><span class="line">ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);</span><br><span class="line"><span class="comment">//从act_ru_exection中查询</span></span><br><span class="line">System.out.println(<span class="string">"流程启动成功：\n"</span>+<span class="string">"执行实例id："</span>+processInstance.getId()</span><br><span class="line">+<span class="string">"\n流程定义id："</span>+processInstance.getProcessDefinitionId()</span><br><span class="line">+<span class="string">"\n流程实例id："</span>+processInstance.getProcessInstanceId());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a href="https://gitee.com/zhudunfeng/Activiti6-modeler-demo" target="_blank" rel="noopener">demo源码</a><br><a href="https://blog.csdn.net/qq_37143673/article/details/102667824" target="_blank" rel="noopener">部分内容引自</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境搭建【这里直接讲解自定义流程】&quot;&gt;&lt;a href=&quot;#环境搭建【这里直接讲解自定义流程】&quot; class=&quot;headerlink&quot; title=&quot;环境搭建【这里直接讲解自定义流程】&quot;&gt;&lt;/a&gt;环境搭建【这里直接讲解自定义流程】&lt;/h1&gt;&lt;h2 id=&quot;集成-Activiti-Modeler&quot;&gt;&lt;a href=&quot;#集成-Activiti-Modeler&quot; class=&quot;headerlink&quot; title=&quot;集成 Activiti Modeler&quot;&gt;&lt;/a&gt;集成 Activiti Modeler&lt;/h2&gt;&lt;h3 id=&quot;下载源码&quot;&gt;&lt;a href=&quot;#下载源码&quot; class=&quot;headerlink&quot; title=&quot;下载源码&quot;&gt;&lt;/a&gt;下载源码&lt;/h3&gt;&lt;p&gt;我这里选用的是 Activiti 5.23.0 版本的页面，下载 zip，解压&lt;br&gt;&lt;a href=&quot;https://github.com/Activiti/Activiti/releases/tag/5.23.0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Activiti 5.23.0 源码&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="流程引擎框架" scheme="http://zhudunfeng.github.io/categories/%E6%B5%81%E7%A8%8B%E5%BC%95%E6%93%8E%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Java" scheme="http://zhudunfeng.github.io/tags/Java/"/>
    
      <category term="Springboot" scheme="http://zhudunfeng.github.io/tags/Springboot/"/>
    
      <category term="activiti6.0" scheme="http://zhudunfeng.github.io/tags/activiti6-0/"/>
    
      <category term="自定义流程" scheme="http://zhudunfeng.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B5%81%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>在SpringBoot项目中引入.yml文件中的设置</title>
    <link href="http://zhudunfeng.github.io/2020/07/23/%E5%9C%A8SpringBoot%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%80%8E%E6%A0%B7%E5%BC%95%E5%85%A5.yml%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E8%AE%BE%E7%BD%AE/"/>
    <id>http://zhudunfeng.github.io/2020/07/23/%E5%9C%A8SpringBoot%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%80%8E%E6%A0%B7%E5%BC%95%E5%85%A5.yml%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E8%AE%BE%E7%BD%AE/</id>
    <published>2020-07-23T12:47:52.534Z</published>
    <updated>2020-07-24T13:50:59.642Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="SpringBoot中获取application.yml文件内容">TOC</a></p><h1 id="原始方式pro-load-与-pro-getProperty-）配合的方式"><a href="#原始方式pro-load-与-pro-getProperty-）配合的方式" class="headerlink" title="原始方式pro.load()与 pro.getProperty(）配合的方式"></a>原始方式pro.load()与 pro.getProperty(）配合的方式</h1><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">构造器 </span><br><span class="line">Properties pro=<span class="keyword">new</span> <span class="built_in">Properties</span>();</span><br><span class="line">读取配置文件的步骤  ★</span><br><span class="line">a. pro加载配置文件</span><br><span class="line">pro.load(InputStream in);</span><br><span class="line">pro.load(Reader in);</span><br><span class="line">b. 根据<span class="built_in">key</span>值取value值</span><br><span class="line">pro.getProperty(<span class="keyword">String</span> <span class="built_in">key</span>);根据<span class="built_in">key</span>值取value值  如果没有<span class="built_in">key</span>值返回<span class="built_in">null</span></span><br><span class="line">pro.getProperty(<span class="keyword">String</span> <span class="built_in">key</span>,<span class="keyword">String</span> defaultvalue);根据<span class="built_in">key</span>值取value值  如果没有<span class="built_in">key</span>值返回defaultvalue</span><br><span class="line">设置键值对信息到配置文件</span><br><span class="line">a. 设置键值对信息</span><br><span class="line">pro.setProperty(<span class="keyword">String</span> <span class="built_in">key</span>, <span class="keyword">String</span> value);</span><br><span class="line">b. 应用到配置文件上</span><br><span class="line">pro.store(OutputStream out, <span class="keyword">String</span> commons);<span class="comment">//comment是注释的意思</span></span><br><span class="line">pro.store(<span class="built_in">Writer</span> out, <span class="keyword">String</span> commons);</span><br></pre></td></tr></table></figure>  <a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//通过java代码拿到配置文件中的信息</span></span><br><span class="line">Properties pro=<span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//1. pro加载配置文件</span></span><br><span class="line">pro.load(<span class="keyword">new</span> FileInputStream(<span class="string">"src\\db.properties"</span>));</span><br><span class="line"><span class="comment">//2. 取值    根据key值取value值</span></span><br><span class="line">String username = pro.getProperty(<span class="string">"url1"</span>,<span class="string">"123"</span>);</span><br><span class="line">System.out.println(username);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Properties pro=new Properties();</span></span><br><span class="line"><span class="comment">//1. 设置键值对数据</span></span><br><span class="line"><span class="comment">pro.setProperty("name", "john");</span></span><br><span class="line"><span class="comment">pro.setProperty("age", "18");</span></span><br><span class="line"><span class="comment">//2. 应用到配置文件上</span></span><br><span class="line"><span class="comment">try &#123;</span></span><br><span class="line"><span class="comment">pro.store(new FileOutputStream("src\\person.properties"), "person");</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125; catch (FileNotFoundException e) &#123;</span></span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line"><span class="comment">e.printStackTrace();</span></span><br><span class="line"><span class="comment">&#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line"><span class="comment">e.printStackTrace();</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Value注解方式"><a href="#Value注解方式" class="headerlink" title="@Value注解方式"></a>@Value注解方式</h1><p>@Value使用必须在使用的类必须能够扫描到</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 模板编号（N） */</span></span><br><span class="line">   <span class="meta">@Value</span>(<span class="string">"$&#123;unifiedability.mail.templateNum&#125;"</span>)</span><br><span class="line">   <span class="keyword">private</span> String templateNum;</span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mail:</span><br><span class="line">    templateNum: 11111111111111111111#一串数字</span><br></pre></td></tr></table></figure><h1 id="ConfigurationProperties-prefix-“前缀内容”-与-EnableConfigurationProperties-映射类-class-配合的方式"><a href="#ConfigurationProperties-prefix-“前缀内容”-与-EnableConfigurationProperties-映射类-class-配合的方式" class="headerlink" title="@ConfigurationProperties(prefix = “前缀内容”)与@EnableConfigurationProperties({映射类.class})配合的方式"></a>@ConfigurationProperties(prefix = “前缀内容”)与@EnableConfigurationProperties({映射类.class})配合的方式</h1><p>application.yml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">baidu:</span><br><span class="line">  token:</span><br><span class="line">    APP_ID: <span class="string">""</span></span><br><span class="line">    API_KEY: <span class="string">""</span></span><br><span class="line">    SECRET_KEY: <span class="string">""</span></span><br></pre></td></tr></table></figure><p>映射实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.demo.properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"baidu.token"</span>)</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaiduProperties</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String APP_ID;</span><br><span class="line">    <span class="keyword">private</span> String API_KEY;</span><br><span class="line">    <span class="keyword">private</span> String SECRET_KEY;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.demo.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atguigu.demo.properties.BaiduProperties;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.demo.service.BaiduSpeakService;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.demo.vo.TextVo;</span><br><span class="line"><span class="keyword">import</span> com.baidu.aip.speech.AipSpeech;</span><br><span class="line"><span class="keyword">import</span> com.baidu.aip.speech.TtsResponse;</span><br><span class="line"><span class="keyword">import</span> com.baidu.aip.util.Util;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(&#123;BaiduProperties<span class="class">.<span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class">@<span class="title">Service</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">BaiduSpeakServiceImpl</span> <span class="keyword">implements</span> <span class="title">BaiduSpeakService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BaiduProperties baiduProperties;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAudio</span><span class="params">(TextVo textVo)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 初始化一个AipSpeech</span></span><br><span class="line">        AipSpeech client = <span class="keyword">new</span> AipSpeech(baiduProperties.getAPP_ID(), baiduProperties.getAPI_KEY(), baiduProperties.getSECRET_KEY());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 可选：设置网络连接参数</span></span><br><span class="line">        client.setConnectionTimeoutInMillis(<span class="number">2000</span>);</span><br><span class="line">        client.setSocketTimeoutInMillis(<span class="number">60000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//可选配置语速</span></span><br><span class="line">        HashMap&lt;String, Object&gt; options = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">        <span class="keyword">if</span>(textVo.getSpd()!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            options.put(<span class="string">"spd"</span>, textVo.getSpd());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(textVo.getPit()!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            options.put(<span class="string">"pit"</span>, textVo.getPit());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(textVo.getPer()!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            options.put(<span class="string">"per"</span>, textVo.getPer());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 可选：设置代理服务器地址, http和socket二选一，或者均不设置</span></span><br><span class="line">        <span class="comment">//client.setHttpProxy("proxy_host", proxy_port);  // 设置http代理</span></span><br><span class="line">        <span class="comment">//client.setSocketProxy("proxy_host", proxy_port);  // 设置socket代理</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 可选：设置log4j日志输出格式，若不设置，则使用默认配置</span></span><br><span class="line">        <span class="comment">// 也可以直接通过jvm启动参数设置此环境变量</span></span><br><span class="line">        <span class="comment">//System.setProperty("aip.log4j.conf", "log4j.properties");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用接口</span></span><br><span class="line">        TtsResponse res = client.synthesis(textVo.getText(), <span class="string">"zh"</span>, <span class="number">1</span>, options);</span><br><span class="line">        <span class="keyword">byte</span>[] data = res.getData();</span><br><span class="line">        JSONObject res1 = res.getResult();</span><br><span class="line">        <span class="keyword">if</span> (data != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Util.writeBytesToFileSystem(data, <span class="string">"D:/"</span>+textVo.getName());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(res1.toString(<span class="number">2</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;@&lt;a href=&quot;SpringBoot中获取application.yml文件内容&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;原始方式pro-load-与-pro-getProperty-）配合的方式&quot;&gt;&lt;a href=&quot;#原始方式pro-load-与-pro-getProperty-）配合的方式&quot; class=&quot;headerlink&quot; title=&quot;原始方式pro.load()与 pro.getProperty(）配合的方式&quot;&gt;&lt;/a&gt;原始方式pro.load()与 pro.getProperty(）配合的方式&lt;/h1&gt;&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;构造器 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Properties pro=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Properties&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;读取配置文件的步骤  ★&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a. pro加载配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pro.load(InputStream in);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pro.load(Reader in);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b. 根据&lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;值取value值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pro.getProperty(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;);根据&lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;值取value值  如果没有&lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;值返回&lt;span class=&quot;built_in&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pro.getProperty(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; defaultvalue);根据&lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;值取value值  如果没有&lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;值返回defaultvalue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;设置键值对信息到配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a. 设置键值对信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pro.setProperty(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b. 应用到配置文件上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pro.store(OutputStream out, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; commons);&lt;span class=&quot;comment&quot;&gt;//comment是注释的意思&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pro.store(&lt;span class=&quot;built_in&quot;&gt;Writer&lt;/span&gt; out, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; commons);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="SpringBoot" scheme="http://zhudunfeng.github.io/categories/SpringBoot/"/>
    
    
      <category term="Java" scheme="http://zhudunfeng.github.io/tags/Java/"/>
    
      <category term="SpringBoot" scheme="http://zhudunfeng.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Activiti6.0获取下一节点任务的心路历程</title>
    <link href="http://zhudunfeng.github.io/2020/07/21/Activiti6.0%E8%8E%B7%E5%8F%96%E4%B8%8B%E4%B8%80%E8%8A%82%E7%82%B9%E4%BB%BB%E5%8A%A1%E7%9A%84%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
    <id>http://zhudunfeng.github.io/2020/07/21/Activiti6.0%E8%8E%B7%E5%8F%96%E4%B8%8B%E4%B8%80%E8%8A%82%E7%82%B9%E4%BB%BB%E5%8A%A1%E7%9A%84%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/</id>
    <published>2020-07-21T13:26:56.848Z</published>
    <updated>2020-07-22T14:00:22.475Z</updated>
    
    <content type="html"><![CDATA[<p>在我的开发任务中，我被分配了一个像下一个节点审批人发送短信的任务，这个任务看起来非常的简单，但在开发过程中遇到了许多的坑，在这里进行记录。</p><a id="more"></a><ol><li>首先，就是获取下一节点的任务信息，这里说简单也简单，说难也难，初期，我查阅了大量的资料，那些资料中都是在代码层面获取下一节点任务信息，我尝试了一下，非常的复杂，后来，我仔细研究了activiti流程变化与数据库变化之间的联系，发现act_ru_task表的执行特性，它会在当前节点任务完成后自动加载下一节点任务，根据这一点，我们就能能够获取到下一节点的相关信息。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> : ADun</span></span><br><span class="line"><span class="comment">     * 获取当前节点的下一节点所有节点信息</span></span><br><span class="line"><span class="comment">     * 解释：当当前节点任务完成后，ac_ru_task表会删除当前任务保存下一待办任务，因此可以获得下一节点任务相关信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Task&gt; <span class="title">nextAllNodeTaskList</span><span class="params">(Task task)</span> </span>&#123;</span><br><span class="line">        List&lt;Task&gt; taskList = <span class="keyword">null</span>;</span><br><span class="line">        taskList = taskService.createTaskQuery().processInstanceId(task.getProcessInstanceId()).list();</span><br><span class="line">        <span class="keyword">return</span> taskList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>接着就是判断流程是怎样执行的了，何时给下一节点发信息，何时不发，在这里我由于对项目流程图不够熟悉，出现了各种的逻辑漏洞<br>（1）代码的第一个版本</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送待办提醒的通用入口（包含短信+邮箱提醒）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task 当前节点的任务信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendTaskNotice</span><span class="params">(Task task)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1、获取下一节点所有任务信息，实际是查询act_ru_task表中的信息</span></span><br><span class="line">        List&lt;Task&gt; nextNodeUserTask = taskQueryService.nextAllNodeTaskList(task);</span><br><span class="line">        <span class="keyword">if</span>(nextNodeUserTask == <span class="keyword">null</span> || nextNodeUserTask.size() &lt;= <span class="number">0</span>)&#123;<span class="comment">//下一节点任务为空，即当前节点为最后一个节点</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (Task nextNodeTask : nextNodeUserTask) &#123;</span><br><span class="line">            List&lt;Execution&gt; executionList = runtimeService.createExecutionQuery().processInstanceId(nextNodeTask.getProcessInstanceId()).list();<span class="comment">//查询出所有的执行实例</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; executionList.size(); i++) &#123;</span><br><span class="line">                <span class="comment">//如果当前任务的执行实例id是下一节点任务执行实例的父id，则进行下一步</span></span><br><span class="line">                <span class="keyword">if</span>(task.getExecutionId() == executionList.get(i).getParentId())&#123;</span><br><span class="line">                    String assignee = nextNodeTask.getAssignee();<span class="comment">//下一节点任务的参与者uid</span></span><br><span class="line">                    <span class="keyword">if</span> (assignee == <span class="keyword">null</span> || <span class="string">""</span>.equals(assignee))&#123;</span><br><span class="line">                        log.error(<span class="string">"下一节点任务参与者为空"</span>);</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    SysUser assigneeUser = sysUserService.selectUserByUserName(assignee);<span class="comment">//下一节点任务参与者用户信息</span></span><br><span class="line">                    <span class="comment">//2、获取流程实例的任务属性</span></span><br><span class="line">                    GatherTaskProperty gatherTaskProperty = gatherTaskPropertyMapper.selectGatherTaskPropertyByProcessInstanceId(task.getProcessInstanceId());</span><br><span class="line">                    SysUser initialUser = sysUserService.selectUserByUserName(gatherTaskProperty.getCreateBy());<span class="comment">//发起人用户信息</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//3、发送邮件、短信提醒</span></span><br><span class="line">                    sendTaskSMNotice(nextNodeTask, assigneeUser, initialUser);</span><br><span class="line">                    sendTaskMailNotice(nextNodeTask, assigneeUser, initialUser);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p> 在这一个版本的代码逻辑中，我的的逻辑是这样的，这里使用到了activiti流程引擎在执行过程中的一个特性，如果流程是单线流程，那么在执行过程中只会在act_ru_exection执行实例表【这个表中会保存流程实例与执行实例，它们有细微的区别，不明白的可以去了解一下】中保存一条流程实例信息，如果是并行流程，那么在act_ru_exection表中会同时保存流程实例与执行实例，并且执行实例属于流程实例，在表中可以发现，这里包含三条信息，第一条就是流程实例的信息，下面两条是执行实例的信息<br><img src="https://img-blog.csdnimg.cn/20200715154900416.jpg#pic_center" alt="在这里插入图片描述"><br>由此我们也能够得出此时是一个下图这种类型的流程图<br><img src="https://img-blog.csdnimg.cn/20200715155804977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODE2NzAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>当初是这样想的，现在看起来非常的智障：：当1号节点任务完成时，act_ru_task表会自动加载2与4任务节点的信息【并行网关的特性】，此时的2与3属于一个执行实例，4与5属于一个执行实例，当任务2完成时，act_ru_task表会自动删除2号节点，加载3号任务，此时3号执行实例的parentid我认为是2号节点的执行id，但后来发现，act_ru_exection表中一直会保存三条数据，变化的只是act_id，第一版本宣布失败<br>（2）代码的第二个版本</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送待办提醒的通用入口（包含短信+邮箱提醒）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task 当前节点的任务信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendTaskNotice</span><span class="params">(Task task)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1、获取下一节点所有任务信息，实际是查询act_ru_task表中的信息</span></span><br><span class="line">        List&lt;Task&gt; nextNodeUserTask = taskQueryService.nextAllNodeTaskList(task);</span><br><span class="line">        <span class="keyword">if</span>(nextNodeUserTask == <span class="keyword">null</span> || nextNodeUserTask.size() &lt;= <span class="number">0</span>)&#123;<span class="comment">//下一节点任务为空，即当前节点为最后一个节点</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、如果下一节点只有一个任务，act_ru_task中只有一条数据</span></span><br><span class="line">        <span class="keyword">if</span> (nextNodeUserTask.size() == <span class="number">1</span>) &#123;</span><br><span class="line">            String assignee =<span class="keyword">null</span>;</span><br><span class="line">            <span class="comment">//判断是单线流程还是并行流程，根据当前任务的执行流程实例id查询act_ru_exection，只有一条数据说明是单线流程，否则时多线</span></span><br><span class="line">            List&lt;Execution&gt; executionList = runtimeService.createExecutionQuery().processInstanceId(nextNodeUserTask.get(<span class="number">0</span>).getProcessInstanceId()).list();</span><br><span class="line">            <span class="keyword">if</span>(executionList.size()==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//单线流程，直接向下一节点任务负责人发送信息</span></span><br><span class="line">                assignee = nextNodeUserTask.get(<span class="number">0</span>).getAssignee();<span class="comment">//下一节点任务的参与者uid</span></span><br><span class="line">                <span class="keyword">if</span> (assignee == <span class="keyword">null</span> || <span class="string">""</span>.equals(assignee))&#123;</span><br><span class="line">                    log.error(<span class="string">"下一节点任务参与者为空"</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                SysUser assigneeUser = sysUserService.selectUserByUserName(assignee);<span class="comment">//下一节点任务参与者用户信息</span></span><br><span class="line">                <span class="comment">//2、获取流程实例的任务属性</span></span><br><span class="line">                GatherTaskProperty gatherTaskProperty = gatherTaskPropertyMapper.selectGatherTaskPropertyByProcessInstanceId(task.getProcessInstanceId());</span><br><span class="line">                SysUser initialUser = sysUserService.selectUserByUserName(gatherTaskProperty.getCreateBy());<span class="comment">//发起人用户信息</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//3、发送邮件、短信提醒</span></span><br><span class="line">                sendTaskSMNotice(nextNodeUserTask.get(<span class="number">0</span>), assigneeUser, initialUser);</span><br><span class="line">                sendTaskMailNotice(nextNodeUserTask.get(<span class="number">0</span>), assigneeUser, initialUser);</span><br><span class="line">                sendTask(task,nextNodeUserTask.get(<span class="number">0</span>));</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//多线流程，只有一条执行实例完成时有可能出现一个任务节点，此时跳过</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//3、如果下一节点任务不只一个任务，act_ru_task中有多条数据</span></span><br><span class="line">        Set&lt;Task&gt; taskArraySet = <span class="keyword">new</span> HashSet&lt;&gt;();<span class="comment">//去重</span></span><br><span class="line">        <span class="keyword">if</span> (nextNodeUserTask.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nextNodeUserTask.size() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                Date timeOne = nextNodeUserTask.get(i).getCreateTime();</span><br><span class="line">                Date timeTwo = nextNodeUserTask.get(i + <span class="number">1</span>).getCreateTime();</span><br><span class="line">                <span class="keyword">if</span> (timeOne.compareTo(timeTwo) == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//如果当前任务的创建时间相同，都发送</span></span><br><span class="line">                    taskArraySet.add(nextNodeUserTask.get(i));</span><br><span class="line">                    taskArraySet.add(nextNodeUserTask.get(i + <span class="number">1</span>));</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (timeOne.compareTo(timeTwo) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//如果当前任务的创建时间不同，timeOne在timeTwo时间之后</span></span><br><span class="line">                    taskArraySet.add(nextNodeUserTask.get(i));<span class="comment">//只发送最近时间创建的任务</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//如果当前任务的创建时间不同，timeOne在timeTwo时间之前</span></span><br><span class="line">                    taskArraySet.add(nextNodeUserTask.get(i + <span class="number">1</span>));<span class="comment">//只发送最近时间创建的任务</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Task nextNodeTask : taskArraySet) &#123;</span><br><span class="line">            sendTask(task, nextNodeTask) ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在这一个版本的代码，我加入了大量的判断，在后期发现这里的逻辑只能适用于两条并行的流程，三条并行会有重复发送的情况，而且在单线流程与并行流程的判断处有逻辑错误，不适合下图流程<br><img src="https://img-blog.csdnimg.cn/20200715162124328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODE2NzAy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在2、3、4任务完成后不会向5发送信息，这是严重的逻辑性错误</p><p>（3）代码的最终版本</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task 当前节点的任务信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> : ADun</span></span><br><span class="line"><span class="comment">     * 发送待办提醒的通用入口（包含短信+邮箱提醒）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendTaskNotice</span><span class="params">(Task task)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1、获取下一节点所有任务信息，实际是查询act_ru_task表中的信息</span></span><br><span class="line">        List&lt;Task&gt; nextNodeUserTask = taskQueryService.nextAllNodeTaskList(task);</span><br><span class="line">        <span class="comment">//下一节点任务为空，即当前节点为最后一个节点</span></span><br><span class="line">        <span class="keyword">if</span> (nextNodeUserTask == <span class="keyword">null</span> || nextNodeUserTask.size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Task nextNodeTask : nextNodeUserTask) &#123;</span><br><span class="line">            String assignee = nextNodeTask.getAssignee();</span><br><span class="line">            <span class="keyword">if</span>(assignee == <span class="keyword">null</span> || <span class="string">""</span>.equals(assignee))&#123;</span><br><span class="line">                log.error(<span class="string">"taskId为"</span> + nextNodeTask.getId() + <span class="string">"的任务参与者不存在！"</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取当前任务的结束时间</span></span><br><span class="line">            HistoricTaskInstance hisTask = historyService.createHistoricTaskInstanceQuery().taskId(task.getId()).singleResult();</span><br><span class="line">            Date hisTaskEndTime = hisTask.getEndTime();</span><br><span class="line">            <span class="comment">//获取下一任务开始时间</span></span><br><span class="line">            Date nextNodeTaskCreateTime = nextNodeTask.getCreateTime();</span><br><span class="line">            <span class="comment">//只有下一任务节点创建时间与当前任务完成时间相等时，向下一节点发送信息</span></span><br><span class="line">            <span class="keyword">if</span> (nextNodeTaskCreateTime.compareTo(hisTaskEndTime) == <span class="number">0</span>) &#123;</span><br><span class="line">                sendTask(task, nextNodeTask);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在这一版本中我还是沿用上一版本代码的思想，在时间中做文章，因为这是一个公司内部的OA系统，网络延时非常小，几乎不计，最后我是通过判断当前任务的完成时间是否下一任务的开始时间相同，相同就向下一任务审批人发送信息，我认为这里还是存在漏洞，可能时间会存在秒级的不准确，大家有什么好的想法可以在评论区留言。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我的开发任务中，我被分配了一个像下一个节点审批人发送短信的任务，这个任务看起来非常的简单，但在开发过程中遇到了许多的坑，在这里进行记录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="流程引擎框架" scheme="http://zhudunfeng.github.io/categories/%E6%B5%81%E7%A8%8B%E5%BC%95%E6%93%8E%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Java" scheme="http://zhudunfeng.github.io/tags/Java/"/>
    
      <category term="Activiti" scheme="http://zhudunfeng.github.io/tags/Activiti/"/>
    
  </entry>
  
  <entry>
    <title>My</title>
    <link href="http://zhudunfeng.github.io/2020/07/21/My/"/>
    <id>http://zhudunfeng.github.io/2020/07/21/My/</id>
    <published>2020-07-21T10:33:36.000Z</published>
    <updated>2020-07-21T10:33:36.408Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Activiti6.0</title>
    <link href="http://zhudunfeng.github.io/2020/07/21/My-Text/"/>
    <id>http://zhudunfeng.github.io/2020/07/21/My-Text/</id>
    <published>2020-07-21T10:22:25.507Z</published>
    <updated>2020-07-21T10:36:06.437Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>欢迎走进A.Dun的Java世界</title>
    <link href="http://zhudunfeng.github.io/2020/07/20/hello-world/"/>
    <id>http://zhudunfeng.github.io/2020/07/20/hello-world/</id>
    <published>2020-07-20T15:38:45.515Z</published>
    <updated>2020-07-21T06:14:06.211Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
